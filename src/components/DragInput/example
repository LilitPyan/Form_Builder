import React, { useRef } from 'react'
import { useDrag, useDrop } from 'react-dnd'

export const TYPES = {
  ITEM: 'item',
};
const Card = ({ item, index, moveItem , addItem}) => {
  const ref = useRef(null)
  const [, drop] = useDrop({
    accept: TYPES.ITEM,
    hover(item, monitor) {
      if (!ref.current) {
        return
      }
      const dragIndex = item.index;
      const hoverIndex = index;
      if (dragIndex === hoverIndex) {
        return
      }
      const hoverBoundingRect = ref.current.getBoundingClientRect();
      const hoverMiddleY =
        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;
      const clientOffset = monitor.getClientOffset();
      const hoverClientY = clientOffset.y - hoverBoundingRect.top;
      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {
        return
      }
      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {
        return
      }
      moveItem(dragIndex, hoverIndex);
      item.index = hoverIndex
    },
  });
  const [, drag] = useDrag({
    item: {...item, type: TYPES.ITEM},
    end: (item, monitor) => {
      const dropResult = monitor.getDropResult();
      if (item && dropResult) {
        addItem(item);
      }
    },
    collect: monitor => ({
      isDragging: monitor.isDragging(),
    }),
  });
  drag(drop(ref));
  return (
    <div className = 'text_input' ref={ref}>
      <label>Text Input</label>
      <br/>
      <input type = 'text'/>
      <button className = 'text_input_btn'>Edit</button>
      <button className = 'text_input_btn'>Delete</button>
    </div>
  )
};
export default Card
